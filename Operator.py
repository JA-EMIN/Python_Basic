# # 연산사 우선 순위
# # **, *, /, // *, +, -
# # 결합도 좌 --> 우
# # ++, -- 등 전치, 후치 연산자는 지원 안한다
# # ++a의 의미는 +(+a) 그냥 +a 양수이다
# a = 10 + 2 -3 * 2 ** 2
# # 1. 10 + 2 - 3 * 4
# # 2. 10 + 2 - 12
# # 3. 12 - 12
# print(a)
#
# # python 입력 함수는 input(), str 값으로 입력받아진다
# r = input("반지름:")
# r = int(r)
# print(r**2*3.14)
# print(type(r))


# && and, || or, ! not
# a = 3
# b = 0 < a < 10        # 다른 언어처럼 0 < a && a < 10이 아니라 수학적 표현 가능
# # b = 0 < a and a < 10
# print(b)

##연산자 우선 순위 > 논리 연산자 우선 순위

# a = -2 | 1
# -2 는 2에대한 2의 보수 : 1111....01 + 1 = 1111....10
# a = 1111....10 | 0000.....1 = 1111......1111
# Sign 비트 1이므로 음수 나머지 다시 보수 취하면 000......1이므로 -1

# a = -2 >> 1
# -2는 2에 대한 2의 보수 : 1111....01 + 1 = 1111....10
# >> 연산하면 1111...1111 = -1

# ## 구성원 연산자 in, not in
# # s = "abcdef hello"
# myList = [10, 20, 30, 40, 50]
# myD = {10:"aa", 20:"bb", 30:"cc"}
# print("aa" in myD) # Dictionary는 key에 대해서만 구성원 연산자 확인 가능

# 식별 연산자 is, not is 참조하는 대상객체가 동일한지의 유무
myList = [10, 20, 30, 40]
# myList1 = myList          #Shallow copy 같은 대상객체를 참조
myList1 = myList.copy()     #Deep copy [10, 20, 30, 40]의 객체를 하나더 생성
